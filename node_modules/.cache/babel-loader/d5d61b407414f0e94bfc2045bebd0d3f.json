{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/weather-search/src/App.js\";\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  const form = document.querySelector(\"form\");\n  const inputCity = document.querySelector('#city');\n  const inputCountry = document.querySelector('#country');\n  const history = document.querySelector(\".history ul\");\n  const msg = document.querySelector(\".message\");\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault();\n    let inputCityVal = inputCity.value;\n    let inputCountryVal = inputCountry.value;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputCityVal},${inputCountryVal}&appid=22dc15f16b68c17e6adeaca94240569a`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      const {\n        weather,\n        main\n      } = data;\n      const li = document.createElement(\"li\");\n      const markup = `\n          <li>\n             <span class=\"weather\">${weather[0][\"main\"]}</span>\n             <span class=\"desc\">${weather[0][\"description\"]}</span>\n             <span class=\"temp\">${main.temp_min} ~ ${main.temp_max}</span>\n             <span class=\"humid\">${main.humidity}</span>\n             <span class=\"time\">${new Date().toLocaleTimeString()}</span>\n          </li>\n        `;\n      li.innerHTML = markup;\n      history.appendChild(li);\n    }).catch(err => {\n      msg.append('404');\n      console.log(err);\n    });\n    form.reset();\n    return;\n  });\n};\n\n_c = Search;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 17\n}, this), document.getElementById('search'));\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/weather-search/src/App.js"],"names":["ReactDOM","Search","form","document","querySelector","inputCity","inputCountry","history","msg","addEventListener","e","preventDefault","inputCityVal","value","inputCountryVal","url","fetch","then","response","json","data","console","log","weather","main","li","createElement","markup","temp_min","temp_max","humidity","Date","toLocaleTimeString","innerHTML","appendChild","catch","err","append","reset","render","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;;AAEA,OAAO,WAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,QAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACA,QAAME,YAAY,GAAGH,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAArB;AACA,QAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAhB;AACA,QAAMI,GAAG,GAAGL,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ;AAEAF,EAAAA,IAAI,CAACO,gBAAL,CAAsB,QAAtB,EAAgCC,CAAC,IAAI;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,YAAY,GAAGP,SAAS,CAACQ,KAA7B;AACA,QAAIC,eAAe,GAAGR,YAAY,CAACO,KAAnC;AAEA,UAAME,GAAG,GAAI,qDAAoDH,YAAa,IAAGE,eAAgB,yCAAjG;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAM;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBJ,IAA1B;AACA,YAAMK,EAAE,GAAGtB,QAAQ,CAACuB,aAAT,CAAuB,IAAvB,CAAX;AACA,YAAMC,MAAM,GAAI;AACxB;AACA,qCAAqCJ,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,CAAmB;AACxD,kCAAkCA,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAA0B;AAC5D,kCAAkCC,IAAI,CAACI,QAAS,MAAKJ,IAAI,CAACK,QAAS;AACnE,mCAAmCL,IAAI,CAACM,QAAS;AACjD,kCAAkC,IAAIC,IAAJ,GAAWC,kBAAX,EAAgC;AAClE;AACA,SARQ;AASAP,MAAAA,EAAE,CAACQ,SAAH,GAAeN,MAAf;AACApB,MAAAA,OAAO,CAAC2B,WAAR,CAAoBT,EAApB;AACD,KAjBH,EAkBGU,KAlBH,CAkBUC,GAAD,IAAS;AACd5B,MAAAA,GAAG,CAAC6B,MAAJ,CAAW,KAAX;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,KArBH;AAsBAlC,IAAAA,IAAI,CAACoC,KAAL;AACJ;AACG,GA/BD;AAgCD,CAvCD;;KAAMrC,M;AAyCND,QAAQ,CAACuC,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BpC,QAAQ,CAACqC,cAAT,CAAwB,QAAxB,CAA5B;AAEA,eAAevC,MAAf","sourcesContent":["import ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Search = () => {\n  const form = document.querySelector(\"form\");\n  const inputCity = document.querySelector('#city');\n  const inputCountry = document.querySelector('#country');\n  const history = document.querySelector(\".history ul\");\n  const msg = document.querySelector(\".message\");\n\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault();\n    let inputCityVal = inputCity.value;\n    let inputCountryVal = inputCountry.value;\n    \n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputCityVal},${inputCountryVal}&appid=22dc15f16b68c17e6adeaca94240569a`;\n    \n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        const { weather, main } = data;\n        const li = document.createElement(\"li\");\n        const markup = `\n          <li>\n             <span class=\"weather\">${weather[0][\"main\"]}</span>\n             <span class=\"desc\">${weather[0][\"description\"]}</span>\n             <span class=\"temp\">${main.temp_min} ~ ${main.temp_max}</span>\n             <span class=\"humid\">${main.humidity}</span>\n             <span class=\"time\">${new Date().toLocaleTimeString()}</span>\n          </li>\n        `;\n        li.innerHTML = markup;\n        history.appendChild(li);\n      })\n      .catch((err) => {\n        msg.append('404');\n        console.log(err);\n      });\n    form.reset();\nreturn;\n  });\n}\n\nReactDOM.render(<Search />, document.getElementById('search'));\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}