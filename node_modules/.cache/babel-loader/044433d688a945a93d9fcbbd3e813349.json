{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/weather-search/src/App.js\";\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  const form = document.querySelector(\"form\");\n  const inputCity = document.querySelector('#city');\n  const inputCountry = document.querySelector('#country');\n  const history = document.querySelector(\".history ul\");\n  const msg = document.querySelector(\".message\");\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault();\n    let inputCityVal = inputCity.value;\n    let inputCountryVal = inputCountry.value;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputCityVal},${inputCountryVal}&appid=22dc15f16b68c17e6adeaca94240569a`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      const {\n        weather,\n        main\n      } = data;\n      const markup = `\n\t\t      \n\t\t         <span class=\"weather\">${weather[0][\"main\"]}</span>\n\t\t         <span class=\"desc\">${weather[0][\"description\"]}</span>\n\t\t         <span class=\"temp\">${main.temp_min} ~ ${main.temp_max}</span>\n\t\t         <span class=\"humid\">${main.humidity}</span>\n\t\t         <span class=\"time\">${new Date().toLocaleTimeString()}</span>\n\t\t      \n\t\t    `;\n      li.innerHTML = markup;\n      return history.append(markup);\n    }).catch(err => {\n      msg.append('404');\n      console.log(err);\n    });\n    form.reset();\n  });\n};\n\n_c = Search;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 17\n}, this), document.getElementById('search'));\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/weather-search/src/App.js"],"names":["ReactDOM","Search","form","document","querySelector","inputCity","inputCountry","history","msg","addEventListener","e","preventDefault","inputCityVal","value","inputCountryVal","url","fetch","then","response","json","data","console","log","weather","main","markup","temp_min","temp_max","humidity","Date","toLocaleTimeString","li","innerHTML","append","catch","err","reset","render","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;;AAEA,OAAO,WAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,QAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACA,QAAME,YAAY,GAAGH,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAArB;AACA,QAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAhB;AACA,QAAMI,GAAG,GAAGL,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ;AAEAF,EAAAA,IAAI,CAACO,gBAAL,CAAsB,QAAtB,EAAgCC,CAAC,IAAI;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,YAAY,GAAGP,SAAS,CAACQ,KAA7B;AACA,QAAIC,eAAe,GAAGR,YAAY,CAACO,KAAnC;AAEA,UAAME,GAAG,GAAI,qDAAoDH,YAAa,IAAGE,eAAgB,yCAAjG;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAM;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBJ,IAA1B;AACA,YAAMK,MAAM,GAAI;AACtB;AACA,mCAAmCF,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,CAAmB;AACtD,gCAAgCA,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAA0B;AAC1D,gCAAgCC,IAAI,CAACE,QAAS,MAAKF,IAAI,CAACG,QAAS;AACjE,iCAAiCH,IAAI,CAACI,QAAS;AAC/C,gCAAgC,IAAIC,IAAJ,GAAWC,kBAAX,EAAgC;AAChE;AACA,OARM;AASAC,MAAAA,EAAE,CAACC,SAAH,GAAeP,MAAf;AACA,aAAOlB,OAAO,CAAC0B,MAAR,CAAeR,MAAf,CAAP;AACD,KAhBH,EAiBGS,KAjBH,CAiBUC,GAAD,IAAS;AACd3B,MAAAA,GAAG,CAACyB,MAAJ,CAAW,KAAX;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,KApBH;AAqBAjC,IAAAA,IAAI,CAACkC,KAAL;AAEA,GA9BD;AAgCA,CAvCD;;KAAMnC,M;AAyCND,QAAQ,CAACqC,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BlC,QAAQ,CAACmC,cAAT,CAAwB,QAAxB,CAA5B;AAEA,eAAerC,MAAf","sourcesContent":["import ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Search = () => {\n\tconst form = document.querySelector(\"form\");\n\tconst inputCity = document.querySelector('#city');\n\tconst inputCountry = document.querySelector('#country');\n\tconst history = document.querySelector(\".history ul\");\n\tconst msg = document.querySelector(\".message\");\n\n\tform.addEventListener(\"submit\", e => {\n\t\te.preventDefault();\n\t\tlet inputCityVal = inputCity.value;\n\t\tlet inputCountryVal = inputCountry.value;\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${inputCityVal},${inputCountryVal}&appid=22dc15f16b68c17e6adeaca94240569a`;\n\n\t\tfetch(url)\n\t\t  .then(response => response.json())\n\t\t  .then(data => {\n\t\t    console.log(data);\n\t\t    const { weather, main } = data;\n\t\t    const markup = `\n\t\t      \n\t\t         <span class=\"weather\">${weather[0][\"main\"]}</span>\n\t\t         <span class=\"desc\">${weather[0][\"description\"]}</span>\n\t\t         <span class=\"temp\">${main.temp_min} ~ ${main.temp_max}</span>\n\t\t         <span class=\"humid\">${main.humidity}</span>\n\t\t         <span class=\"time\">${new Date().toLocaleTimeString()}</span>\n\t\t      \n\t\t    `;\n\t\t    li.innerHTML = markup;\n\t\t    return history.append(markup);\n\t\t  })\n\t\t  .catch((err) => {\n\t\t    msg.append('404');\n\t\t    console.log(err);\n\t\t  });\n\t\tform.reset();\n\n\t});\n\t\n}\n\nReactDOM.render(<Search />, document.getElementById('search'));\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}