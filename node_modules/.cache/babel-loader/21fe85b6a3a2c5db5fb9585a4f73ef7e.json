{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Search = () => {\n  /*SEARCH BY USING A CITY NAME (e.g. athens) OR A COMMA-SEPARATED CITY NAME ALONG WITH THE COUNTRY CODE (e.g. athens,gr)*/\n  const form = document.querySelector(\".top-banner form\");\n  const input = document.querySelector(\".top-banner input\");\n  const msg = document.querySelector(\".top-banner .msg\");\n  const list = document.querySelector(\".ajax-section .cities\");\n  /*SUBSCRIBE HERE FOR API KEY: https://home.openweathermap.org/users/sign_up*/\n\n  const apiKey = \"4d8fb5b93d4af21d66a2948710284366\";\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault();\n    let inputVal = input.value; //check if there's already a city\n\n    const listItems = list.querySelectorAll(\".ajax-section .city\");\n    const listItemsArray = Array.from(listItems);\n\n    if (listItemsArray.length > 0) {\n      const filteredArray = listItemsArray.filter(el => {\n        let content = \"\"; //athens,gr\n\n        if (inputVal.includes(\",\")) {\n          //athens,grrrrrr->invalid country code, so we keep only the first part of inputVal\n          if (inputVal.split(\",\")[1].length > 2) {\n            inputVal = inputVal.split(\",\")[0];\n            content = el.querySelector(\".city-name span\").textContent.toLowerCase();\n          } else {\n            content = el.querySelector(\".city-name\").dataset.name.toLowerCase();\n          }\n        } else {\n          //athens\n          content = el.querySelector(\".city-name span\").textContent.toLowerCase();\n        }\n\n        return content == inputVal.toLowerCase();\n      });\n\n      if (filteredArray.length > 0) {\n        msg.textContent = `You already know the weather for ${filteredArray[0].querySelector(\".city-name span\").textContent} ...otherwise be more specific by providing the country code as well ðŸ˜‰`;\n        form.reset();\n        input.focus();\n        return;\n      }\n    } //ajax here\n\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputVal}&appid=${apiKey}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      const {\n        main,\n        name,\n        sys,\n        weather\n      } = data;\n      const icon = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${weather[0][\"icon\"]}.svg`;\n      const li = document.createElement(\"li\");\n      li.classList.add(\"city\");\n      const markup = `\n\t        <h2 class=\"city-name\" data-name=\"${name},${sys.country}\">\n\t          <span>${name}</span>\n\t          <sup>${sys.country}</sup>\n\t        </h2>\n\t        <div class=\"city-temp\">${Math.round(main.temp)}<sup>Â°C</sup></div>\n\t        <figure>\n\t          <img class=\"city-icon\" src=\"${icon}\" alt=\"${weather[0][\"description\"]}\">\n\t          <figcaption>${weather[0][\"description\"]}</figcaption>\n\t        </figure>\n\t      `;\n      li.innerHTML = markup;\n      list.appendChild(li);\n    }).catch(() => {\n      msg.textContent = \"Please search for a valid city ðŸ˜©\";\n    });\n    msg.textContent = \"\";\n    form.reset();\n    input.focus();\n  });\n}; // ReactDOM.render(<Search />, document.getElementById('search'));\n\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/weather-search/src/App.js"],"names":["ReactDOM","Search","form","document","querySelector","input","msg","list","apiKey","addEventListener","e","preventDefault","inputVal","value","listItems","querySelectorAll","listItemsArray","Array","from","length","filteredArray","filter","el","content","includes","split","textContent","toLowerCase","dataset","name","reset","focus","url","fetch","then","response","json","data","console","log","main","sys","weather","icon","li","createElement","classList","add","markup","country","Math","round","temp","innerHTML","appendChild","catch"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Search = () => {\n\t/*SEARCH BY USING A CITY NAME (e.g. athens) OR A COMMA-SEPARATED CITY NAME ALONG WITH THE COUNTRY CODE (e.g. athens,gr)*/\n\tconst form = document.querySelector(\".top-banner form\");\n\tconst input = document.querySelector(\".top-banner input\");\n\tconst msg = document.querySelector(\".top-banner .msg\");\n\tconst list = document.querySelector(\".ajax-section .cities\");\n\t/*SUBSCRIBE HERE FOR API KEY: https://home.openweathermap.org/users/sign_up*/\n\tconst apiKey = \"4d8fb5b93d4af21d66a2948710284366\";\n\n\tform.addEventListener(\"submit\", e => {\n\t  e.preventDefault();\n\t  let inputVal = input.value;\n\n\t  //check if there's already a city\n\t  const listItems = list.querySelectorAll(\".ajax-section .city\");\n\t  const listItemsArray = Array.from(listItems);\n\n\t  if (listItemsArray.length > 0) {\n\t    const filteredArray = listItemsArray.filter(el => {\n\t      let content = \"\";\n\t      //athens,gr\n\t      if (inputVal.includes(\",\")) {\n\t        //athens,grrrrrr->invalid country code, so we keep only the first part of inputVal\n\t        if (inputVal.split(\",\")[1].length > 2) {\n\t          inputVal = inputVal.split(\",\")[0];\n\t          content = el\n\t            .querySelector(\".city-name span\")\n\t            .textContent.toLowerCase();\n\t        } else {\n\t          content = el.querySelector(\".city-name\").dataset.name.toLowerCase();\n\t        }\n\t      } else {\n\t        //athens\n\t        content = el.querySelector(\".city-name span\").textContent.toLowerCase();\n\t      }\n\t      return content == inputVal.toLowerCase();\n\t    });\n\n\t    if (filteredArray.length > 0) {\n\t      msg.textContent = `You already know the weather for ${\n\t        filteredArray[0].querySelector(\".city-name span\").textContent\n\t      } ...otherwise be more specific by providing the country code as well ðŸ˜‰`;\n\t      form.reset();\n\t      input.focus();\n\t      return;\n\t    }\n\t  }\n\n\t  //ajax here\n\t  const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputVal}&appid=${apiKey}&units=metric`;\n\n\t  fetch(url)\n\t    .then(response => response.json())\n\t    .then(data => {\n\t    console.log(data);\n\t      const { main, name, sys, weather } = data;\n\t      const icon = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${\n\t        weather[0][\"icon\"]\n\t      }.svg`;\n\n\t      const li = document.createElement(\"li\");\n\t      li.classList.add(\"city\");\n\t      const markup = `\n\t        <h2 class=\"city-name\" data-name=\"${name},${sys.country}\">\n\t          <span>${name}</span>\n\t          <sup>${sys.country}</sup>\n\t        </h2>\n\t        <div class=\"city-temp\">${Math.round(main.temp)}<sup>Â°C</sup></div>\n\t        <figure>\n\t          <img class=\"city-icon\" src=\"${icon}\" alt=\"${\n\t        weather[0][\"description\"]\n\t      }\">\n\t          <figcaption>${weather[0][\"description\"]}</figcaption>\n\t        </figure>\n\t      `;\n\t      li.innerHTML = markup;\n\t      list.appendChild(li);\n\t    })\n\t    .catch(() => {\n\t      msg.textContent = \"Please search for a valid city ðŸ˜©\";\n\t    });\n\n\t  msg.textContent = \"\";\n\t  form.reset();\n\t  input.focus();\n\t});\n\t\n}\n\n// ReactDOM.render(<Search />, document.getElementById('search'));\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}